apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-lab
  namespace: 20220415-nginx-lab
  labels:
    app: nginx-lab
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-lab
  template:
    metadata:
      labels:
        app: nginx-lab
    spec:
      containers:
        - name: server
          image: foo.com/k8s-nginx-ingress-lab:latest
          command:
            - /bin/bash
            - '-c'
            - '--'
          args:
            - python3 app.py
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
            - name: BASE
              value: nginx-lab
            - name: FLASK_ENV
              value: development
          resources: {}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: foo-registry-auth
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-lab-no-prefix
  namespace: 20220415-nginx-lab
  labels:
    app: nginx-lab-no-prefix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-lab-no-prefix
  template:
    metadata:
      labels:
        app: nginx-lab-no-prefix
    spec:
      containers:
        - name: server
          image: foo.com/k8s-nginx-ingress-lab:latest
          command:
            - /bin/bash
            - '-c'
            - '--'
          args:
            - python3 app.py
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          env:
            - name: FLASK_ENV
              value: development
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 5000
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 60
            successThreshold: 1
            failureThreshold: 1
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      imagePullSecrets:
        - name: foo-registry-auth
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

